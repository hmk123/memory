http://vscode.cdn.azure.cn/


git init


touch .gitignore

git status

git add .  

在git命令行中重新输入命令：
先输入：$ git config --global user.name “hmk123”
回车后，
再输入：$ git config --global user.email “你的邮箱地址”
完成后再提交就没问题了。


进入git bash界面然后：
第一步，git config --global --list 验证邮箱与GitHub注册时输入的是否一致

第二步，通过git config --global user.name “yourname”，git config --global user.email “email@email.com ”（这里得名字和邮箱都是注册github时用的）设置全局用户名和邮箱。

第三步，ssh-keygen -t rsa -C  917811829@qq.com，一路回车，在出现选择时输入Y，再一路回车直到生成密钥。会在/Users/***/路径下生成一个.ssh文件夹，密钥就存储在其中。
————————————————
版权声明：本文为CSDN博主「JT.X」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_43768946/article/details/90411154


git commit -m"第一次提交"    //添加到本地仓库

git remote add github git@github.com:hmk123/dmrpg.git
git push -u github master 

  

git push -u origin master //
git push -u test master  

///////////////////////////////////////
git remote add origin https://gitee.com/he-mengkai/dmrpg.git   


git remote add origin https://gitee.com/he-mengkai/dm.git   
git clone https://gitee.com/he-mengkai/dm.git   

git reflog

git reset --hard [Head]

解决方法：
1、先删除远程 Git 仓库
$ git remote rm origin
2、再添加远程 Git 仓库
git remote add origin git@gitee.com:ferry18829517728/vue_shop.git

git@gitee.com:he-mengkai/dm.git

$ git pull origin master

   git@github.com:hmk123/memory-.git
更新项目
git log

git push origin master

////////////////////////


接下来先创建一个新分支提交改动

$ git branch newbranch
然后输入这条命令检查是否创建成功
$ git branch
这时输出
  newbranch
* master
这样就创建成功了，前面的*代表的是当前你所在的工作分支。我们接下来就要切换工作分支。
$ git checkout newbranch
这样就切换完了，可以 $ git branch确认下。然后你要将你的改动提交到新的分支上。
$ git add .
$ git commit -a
此时可以 $ git status检查下提交情况。如果提交成功，我们接下来就要回主分支了，代码和之前一样。
$ git checkout master
然后我们要将新分支提交的改动合并到主分支上
$ git merge newbranch
合并分支可能产生冲突这是正常的，虽然我们这是新建的分支不会产生冲突，但还是在这里记录下。下面的代码可以查看产生冲突的文件，然后做对应的修改再提交一次就可以了。
$ git diff
我们的问题就解决了，接下来就可以push代码了。
$ git push -u origin master
新建分支的朋友别忘了删除这个分支
$ git branch -D newbranch
如果想保留分支只是想删除已经合并的部分只要把大写的D改成小写的d就行了。
 
